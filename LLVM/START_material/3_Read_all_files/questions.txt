1). difference in llvm and gcc?
Which is better -> In llvm if we not tell compiler that than it will not create interminddiate file. it will direct create executable(MIR addPassesToEmitFile ,addPassesToEmitMC)

https://medium.com/@alitech_2017/gcc-vs-clang-llvm-an-in-depth-comparison-of-c-c-compilers-899ede2be378


2). What is vxworks? 
3). What's static single assignment?
4). Explain Compilation architecture /phase for clang and gcc Compiler ?
5). Why to use volatile keyword in c?
6). What is temple and template specialisation in c++?
8). Explain  Compiler optimisation.
9). Memory Hierarchy
10).CPU Pipelining
	pipelining is overlapping of instructions inside the cpu to increase overall efficiency of the 
	system which is done via fetching  the next instruction before the current instruction is completed.
11).Dominator  and Postdominator Tree
12). Detect a Loop in CFG
13). Find a loop in graph 
14). Memory model of a program(c)
15).How malloc implemented
16).Why compiler interests you?
17)work whatb i did in cmpiler
18)what is ssa
19)domain specific language
20)data flow analysis
21)most of the optimization
22)data dependancy
23)
•	Control flow graph construction, how basic data flow analysis is done
•	LLVM IRs
•	Run time stack construction and what goes on to the stack
•	Code generation for function calls
•	General understanding of linkers and assemblers. How static/dynamic linking is done
24)
pipeline structure & hazards, cache & memory organization, etc.
25)
ARM registers and architecure and calling conventions
26)
X86 registers and architecure and calling conventions
27)ELF file format and readelf,objdump command
28)Vectorization
29)static and dynamic linking
30)Binutiles
31)static analyzer for static analysis










