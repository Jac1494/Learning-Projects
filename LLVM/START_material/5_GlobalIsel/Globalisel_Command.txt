Global-isel command:-
===================
./llc -global-isel -march=x86-64  test.ll -stop-after=irtranslator -simplify-mir

./llc -global-isel -march=x86-64  test.ll -stop-after=legalizer -o test.s_legalize

./llc -global-isel -march=x86-64  test.ll -stop-after=regbankselect -o test.s_regbankselect

./llc -global-isel -march=x86-64  test.ll -stop-after=instruction-select -o test.s_instruction_select

For debugging notes:-
====================

- For each target target machine file is there (Target/X86/X86TargetMachine.cpp) same for all , in that on function is there TargetPassConfig which is add all the passes (irtranslator  = addIRPasses , instruction selection = addInstSelector , register bank selector = addRegBankSelect , and extra)

- For internal calls follow Head First into Global-isel

- runOnMachineFunction is  main function ,for debugging perpose

Thread 2.1 "clang-13" hit Breakpoint 4, llvm::MachineFunctionPass::runOnFunction (this
    =0x5c96e0, F=...) at /home/jaydeep/LLVM/llvm-project/llvm/lib/CodeGen/MachineFunctionPass.cpp:40
40        if (F.hasAvailableExternallyLinkage())
(gdb)

jaydeep@bft:~/llvm-project/llvm$ grep -irn runOn* docs/WritingAnLLVMPass.rst | grep method
159:We declare a :ref:`runOnFunction <writing-an-llvm-pass-runOnFunction>` method,
376:overload the ``runOnModule`` method with the following signature:
378:The ``runOnModule`` method
385:The ``runOnModule`` method performs the interesting work of the pass.  It
439:The ``runOnSCC`` method
446:The ``runOnSCC`` method performs the interesting work of the pass, and should
513:The ``runOnFunction`` method
520:The ``runOnFunction`` method must be implemented by your subclass to do the
576:The ``runOnLoop`` method
583:The ``runOnLoop`` method must be implemented by your subclass to do the
629:The ``runOnRegion`` method
636:The ``runOnRegion`` method must be implemented by your subclass to do the
678:The ``runOnMachineFunction(MachineFunction &MF)`` method
689:The ``runOnMachineFunction`` method is called on every ``MachineFunction`` in a


Breakpoint 1, llvm::GISelCSEAnalysisWrapperPass::runOnMachineFunction (this=0x621f30, MF=...) at /hom
   e/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/CSEInfo.cpp:418
418       releaseMemory();
(gdb) c
Continuing.

Breakpoint 1, llvm::IRTranslator::runOnMachineFunction (this=0x621850, CurMF=...) at /home/bft/Jay
   deep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:2305
warning: Source file is more recent than executable.
2305      MF = &CurMF;
(gdb)
Continuing.

Breakpoint 1, llvm::GISelKnownBitsAnalysis::runOnMachineFunction (this=0x622470, MF=...) at /home/bft
   /Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp:500
500       return false;
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::AArch64PreLegalizerCombiner::runOnMachineFunction (this=0x622360, M
    F=...) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PreLegalizerCombiner.cpp:172
172       if (MF.getProperties().hasProperty(
(gdb)
Continuing.

Breakpoint 1, llvm::GISelCSEAnalysisWrapperPass::runOnMachineFunction (this=0x6228f0, MF=...) at /hom
   e/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/CSEInfo.cpp:418
418       releaseMemory();
(gdb)
Continuing.

Breakpoint 1, llvm::Legalizer::runOnMachineFunction (this=0x622580, MF=...) at /home/bft/Jaydeep/llvm
   _all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp:312
312       if (MF.getProperties().hasProperty(
(gdb)
Continuing.

Breakpoint 1, llvm::RegBankSelect::runOnMachineFunction (this=0x622e30, MF=...) at /home/bft/Jaydeep/
   llvm_all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp:654
654       if (MF.getProperties().hasProperty(
(gdb)
Continuing.

Breakpoint 1, llvm::Localizer::runOnMachineFunction (this=0x623040, MF=...) at /home/bft/Jaydeep/llvm
   _all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/Localizer.cpp:168
168       if (MF.getProperties().hasProperty(
(gdb)
Continuing.

Breakpoint 1, llvm::GISelKnownBitsAnalysis::runOnMachineFunction (this=0x6233f0, MF=...) at /home/bft
   /Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp:500
500       return false;
(gdb)
Continuing.

Breakpoint 1, llvm::InstructionSelect::runOnMachineFunction (this=0x6231b0, MF=...) at /home/bft/Jayd
   eep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp:69
69        if (MF.getProperties().hasProperty(
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::ResetMachineFunction::runOnMachineFunction (this=0x623630, MF=..
    .) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/ResetMachineFunctionPass.cpp:55
55            ++NumFunctionsVisited;
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::AArch64DAGToDAGISel::runOnMachineFunction (this=0x623720, MF=...
    ) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:53
53          Subtarget = &MF.getSubtarget<AArch64Subtarget>();
(gdb)
Continuing.

Breakpoint 1, 0x00007ffff6c5c560 in llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&)@plt () from /home/bft/Jaydeep/llvm_all/debug/llvm-project/install/bin/../lib/libLLVMAArch64CodeGen.so.11git
(gdb)
Continuing.

Breakpoint 1, llvm::SelectionDAGISel::runOnMachineFunction (this=0x623720, mf=...) at /home/bft/Jayde
   ep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:412
412       if (mf.getProperties().hasProperty(
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::FinalizeISel::runOnMachineFunction (this=0x625730, MF=...) at /h
   ome/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/FinalizeISel.cpp:49
49        bool Changed = false;
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::LocalStackSlotPass::runOnMachineFunction (this=0x625a50, MF=...)
     at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/LocalStackSlotAllocation.cpp:114
114       MachineFrameInfo &MFI = MF.getFrameInfo();
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::PHIElimination::runOnMachineFunction (this=0x625c10, MF=...) at
   /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/PHIElimination.cpp:149
149       MRI = &MF.getRegInfo();
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::TwoAddressInstructionPass::runOnMachineFunction (this=0x626140, F
    unc=...) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:1664
1664      MF = &Func;
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::RegAllocFast::runOnMachineFunction (this=0x6276e0, MF=...) at /h
   ome/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp:1241
1241      LLVM_DEBUG(dbgs() << "********** FAST REGISTER ALLOCATION **********\n"
(gdb)
Continuing.

Breakpoint 1, 0x00007ffff4d350a0 in llvm::RegisterClassInfo::runOnMachineFunction(llvm::MachineFunction const&)@plt () from /home/bft/Jaydeep/llvm_all/debug/llvm-project/install/bin/../lib/libLLVMCodeGen.so.11git
(gdb) c
Continuing.

Breakpoint 1, llvm::RegisterClassInfo::runOnMachineFunction (this=0x627768, mf=...) at /home/bft/Jayd
   eep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/RegisterClassInfo.cpp:44
44        bool Update = false;
(gdb) c
Continuing.

Breakpoint 1, (anonymous namespace)::FixupStatepointCallerSaved::runOnMachineFunction (this=0x626330, MF
    =...) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/FixupStatepointCallerSaved.cpp:290
290       if (skipFunction(MF.getFunction()))
(gdb)
Continuing.

Breakpoint 1, llvm::LazyMachineBlockFrequencyInfoPass::runOnMachineFunction (this=0x627d70, F=...) at
   /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/LazyMachineBlockFrequencyInfo.cpp:95
95        MF = &F;
(gdb)
Continuing.

Breakpoint 1, llvm::MachineOptimizationRemarkEmitterPass::runOnMachineFunction (this=0x627ac0, MF=...
    ) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/MachineOptimizationRemarkEmitter.cpp:75
75        if (MF.getFunction().getContext().getDiagnosticsHotnessRequested())
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::PEI::runOnMachineFunction (this=0x622f30, MF=...) at /home/bft/J
   aydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:216
216       NumFuncSeen++;
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::ExpandPostRA::runOnMachineFunction (this=0x627fb0, MF=...) at /h
   ome/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/ExpandPostRAPseudos.cpp:183
183       LLVM_DEBUG(dbgs() << "Machine Function\n"
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::AArch64ExpandPseudo::runOnMachineFunction (this=0x628050, MF=...
    ) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp:1037
1037      TII = static_cast<const AArch64InstrInfo *>(MF.getSubtarget().getInstrInfo());
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::AArch64SpeculationHardening::runOnMachineFunction (this=0x6281d0, M
    F=...) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp:653
653       if (!MF.getFunction().hasFnAttribute(Attribute::SpeculativeLoadHardening))
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::AArch64IndirectThunks::runOnMachineFunction (this=0x6282f0, MF=.
    ..) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/Target/AArch64/AArch64SLSHardening.cpp:440
440       LLVM_DEBUG(dbgs() << getPassName() << '\n');
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::AArch64SLSHardening::runOnMachineFunction (this=0x4b3ff0, MF=...
    ) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/Target/AArch64/AArch64SLSHardening.cpp:96
96        ST = &MF.getSubtarget<AArch64Subtarget>();
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::GCMachineCodeAnalysis::runOnMachineFunction (this=0x4b4120, MF=.
    ..) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/GCRootLowering.cpp:307
307       if (!MF.getFunction().hasGC())
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::FEntryInserter::runOnMachineFunction (this=0x4b4200, MF=...) at
   /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/FEntryInserter.cpp:39
39            MF.getFunction().getFnAttribute("fentry-call").getValueAsString());
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::XRayInstrumentation::runOnMachineFunction (this=0x6126f0, MF=...
    ) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/XRayInstrumentation.cpp:146
146       auto &F = MF.getFunction();
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::PatchableFunction::runOnMachineFunction (this=0x628130, MF=...)
   at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/PatchableFunction.cpp:58
58        if (MF.getFunction().hasFnAttribute("patchable-function-entry")) {
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::AArch64BranchTargets::runOnMachineFunction (this=0x6258e0, MF=..
    .) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/Target/AArch64/AArch64BranchTargets.cpp:60
60        const Function &F = MF.getFunction();
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::BranchRelaxation::runOnMachineFunction (this=0x613b40, mf=...) a
   t /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp:537
537       MF = &mf;
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::UnpackMachineBundles::runOnMachineFunction (this=0x6127c0, MF=..
    .) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/MachineInstrBundle.cpp:46
46        if (PredicateFtor && !PredicateFtor(MF))
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::FuncletLayout::runOnMachineFunction (this=0x613db0, F=...) at /ho
   me/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/FuncletLayout.cpp:48
48            getEHScopeMembership(F);
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::StackMapLiveness::runOnMachineFunction (this=0x629d10, MF=...) a
   t /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/StackMapLivenessAnalysis.cpp:106
106       if (!EnablePatchPointLiveness)
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::LiveDebugValues::runOnMachineFunction (this=0x629e00, MF=...) at
    /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/LiveDebugValues.cpp:1959
1959      if (!MF.getFunction().getSubprogram())
(gdb)
Continuing.

Breakpoint 1, llvm::LazyMachineBlockFrequencyInfoPass::runOnMachineFunction (this=0x62b380, F=...) at
   /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/LazyMachineBlockFrequencyInfo.cpp:95
95        MF = &F;
(gdb)
Continuing.

Breakpoint 1, llvm::MachineOptimizationRemarkEmitterPass::runOnMachineFunction (this=0x62b210, MF=...
    ) at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/CodeGen/MachineOptimizationRemarkEmitter.cpp:75
75        if (MF.getFunction().getContext().getDiagnosticsHotnessRequested())
(gdb)
Continuing.

Breakpoint 1, (anonymous namespace)::AArch64AsmPrinter::runOnMachineFunction (this=0x62ad90, MF=...)
   at /home/bft/Jaydeep/llvm_all/debug/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:125
125         AArch64FI = MF.getInfo<AArch64FunctionInfo>();
(gdb)
Continuing.


