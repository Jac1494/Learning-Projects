https://web.archive.org/web/20160801075146/http://www.x86-64.org/documentation/abi.pdf

http://flint.cs.yale.edu/cs421/papers/x86-asm/asm.html

https://www.cs.cmu.edu/~fp/courses/15213-s06/misc/asm64-handout.pdf

https://cs.nyu.edu/courses/spring17/CSCI-GA.1144-001/lecture4.pdf

https://software.intel.com/sites/default/files/m/d/4/1/d/8/Introduction_to_x64_Assembly.pdf


https://i.stack.imgur.com/WgcQv.png

http://6.s081.scripts.mit.edu/sp18/x86-64-architecture-guide.html

http://www.cs.williams.edu/~tom/courses/434/outlines/lect18_2.html

http://daksh.github.io/GCC-Calling-Conventions/

https://www.agner.org/optimize/calling_conventions.pdf

https://courses.cs.washington.edu/courses/cse410/17wi/lectures/CSE410-L13-procedures-II_17wi.pdf

http://pages.cs.wisc.edu/~goadl/cs354/handouts/ch9.pdf

https://www.cse.iitd.ernet.in/~sbansal/os/lec/l5.html

https://aaronbloomfield.github.io/pdr/book/x86-64bit-ccc-chapter.pdf

https://stackoverflow.com/questions/10392895/whats-the-advantage-of-having-nonvolatile-registers-in-a-calling-convention


https://zhongshugu.wordpress.com/2011/02/23/caller-save-registers-and-callee-save-registers/

https://www.sciencedirect.com/topics/computer-science/callee-saves-register

http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.47.5253&rep=rep1&type=pdf

https://www.cs.cmu.edu/~rjsimmon/15411-f15/lec/11-calling.pdf

https://www.cs.utexas.edu/users/lin/cs380c/handout23.pdf

https://link.springer.com/article/10.1007%2FBF01807505

